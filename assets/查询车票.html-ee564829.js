import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,a as t}from"./app-50f4b308.js";const p={},c=t(`<h2 id="查询车票功能实现" tabindex="-1"><a class="header-anchor" href="#查询车票功能实现" aria-hidden="true">#</a> 查询车票功能实现</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 根据条件查询车票
 */</span>
<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/api/ticket-service/ticket/query&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TicketPageQueryRespDTO</span><span class="token punctuation">&gt;</span></span> <span class="token function">pageListTicketQuery</span><span class="token punctuation">(</span><span class="token class-name">TicketPageQueryReqDTO</span> requestParam<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">Results</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>ticketService<span class="token punctuation">.</span><span class="token function">pageListTicketQuery</span><span class="token punctuation">(</span>requestParam<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>根据条件查询车票，一般登录12306查询车票的时候，都需要输入出发地和目的地，还有触发日期，然后才能查询车票，并且查询的时间范围随着政策的调整而变化，所以12306项目中默认的时间是15天，以下是查询的条件</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TicketPageQueryReqDTO</span> <span class="token keyword">extends</span> <span class="token class-name">PageRequest</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 出发地 Code
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> fromStation<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 目的地 Code
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> toStation<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 出发日期
     */</span>
    <span class="token annotation punctuation">@DateTimeFormat</span><span class="token punctuation">(</span>pattern <span class="token operator">=</span> <span class="token string">&quot;yyyy-MM-dd&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Date</span> departureDate<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 出发站点
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> departure<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 到达站点
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> arrival<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里放了四个条件，出发地code目的地code，出发站点和目的站点，接着是查询的service方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">TicketPageQueryRespDTO</span> <span class="token function">pageListTicketQuery</span><span class="token punctuation">(</span><span class="token class-name">TicketPageQueryReqDTO</span> requestParam<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 责任链模式 验证城市名称是否存在、不存在加载缓存等等</span>
    ticketPageQueryAbstractChainContext<span class="token punctuation">.</span><span class="token function">handler</span><span class="token punctuation">(</span><span class="token class-name">TicketChainMarkEnum</span><span class="token punctuation">.</span><span class="token constant">TRAIN_QUERY_FILTER</span><span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> requestParam<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">StationDO</span> fromStationDO <span class="token operator">=</span> stationMapper<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span><span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token function">lambdaQuery</span><span class="token punctuation">(</span><span class="token class-name">StationDO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">StationDO</span><span class="token operator">::</span><span class="token function">getCode</span><span class="token punctuation">,</span> requestParam<span class="token punctuation">.</span><span class="token function">getFromStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">StationDO</span> toStationDO <span class="token operator">=</span> stationMapper<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span><span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token function">lambdaQuery</span><span class="token punctuation">(</span><span class="token class-name">StationDO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">StationDO</span><span class="token operator">::</span><span class="token function">getCode</span><span class="token punctuation">,</span> requestParam<span class="token punctuation">.</span><span class="token function">getToStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TrainStationRelationDO</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token function">lambdaQuery</span><span class="token punctuation">(</span><span class="token class-name">TrainStationRelationDO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">TrainStationRelationDO</span><span class="token operator">::</span><span class="token function">getStartRegion</span><span class="token punctuation">,</span> fromStationDO<span class="token punctuation">.</span><span class="token function">getRegionName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">TrainStationRelationDO</span><span class="token operator">::</span><span class="token function">getEndRegion</span><span class="token punctuation">,</span> toStationDO<span class="token punctuation">.</span><span class="token function">getRegionName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TrainStationRelationDO</span><span class="token punctuation">&gt;</span></span> trainStationRelationList <span class="token operator">=</span> trainStationRelationMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TicketListDTO</span><span class="token punctuation">&gt;</span></span> seatResults <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> trainBrandSet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">TrainStationRelationDO</span> each <span class="token operator">:</span> trainStationRelationList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TrainDO</span><span class="token punctuation">&gt;</span></span> trainQueryWrapper <span class="token operator">=</span> <span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token function">lambdaQuery</span><span class="token punctuation">(</span><span class="token class-name">TrainDO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">TrainDO</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getTrainId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">TrainDO</span> trainDO <span class="token operator">=</span> trainMapper<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span>trainQueryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">TicketListDTO</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TicketListDTO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        result<span class="token punctuation">.</span><span class="token function">setTrainId</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>trainDO<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        result<span class="token punctuation">.</span><span class="token function">setTrainNumber</span><span class="token punctuation">(</span>trainDO<span class="token punctuation">.</span><span class="token function">getTrainNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        result<span class="token punctuation">.</span><span class="token function">setDepartureTime</span><span class="token punctuation">(</span>each<span class="token punctuation">.</span><span class="token function">getDepartureTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        result<span class="token punctuation">.</span><span class="token function">setArrivalTime</span><span class="token punctuation">(</span>each<span class="token punctuation">.</span><span class="token function">getArrivalTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//历时</span>
        result<span class="token punctuation">.</span><span class="token function">setDuration</span><span class="token punctuation">(</span><span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">calculateHourDifference</span><span class="token punctuation">(</span>each<span class="token punctuation">.</span><span class="token function">getDepartureTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getArrivalTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        result<span class="token punctuation">.</span><span class="token function">setDeparture</span><span class="token punctuation">(</span>each<span class="token punctuation">.</span><span class="token function">getDeparture</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        result<span class="token punctuation">.</span><span class="token function">setArrival</span><span class="token punctuation">(</span>each<span class="token punctuation">.</span><span class="token function">getArrival</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        result<span class="token punctuation">.</span><span class="token function">setDepartureFlag</span><span class="token punctuation">(</span>each<span class="token punctuation">.</span><span class="token function">getDepartureFlag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        result<span class="token punctuation">.</span><span class="token function">setArrivalFlag</span><span class="token punctuation">(</span>each<span class="token punctuation">.</span><span class="token function">getArrivalFlag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//车类型 0：高铁 1：动车 2：普通车</span>
        result<span class="token punctuation">.</span><span class="token function">setTrainType</span><span class="token punctuation">(</span>trainDO<span class="token punctuation">.</span><span class="token function">getTrainType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>trainDO<span class="token punctuation">.</span><span class="token function">getTrainTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//列车标签集合 0：复兴号 1：智能动车组 2：静音车厢 3：支持选铺</span>
            result<span class="token punctuation">.</span><span class="token function">setTrainTags</span><span class="token punctuation">(</span><span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>trainDO<span class="token punctuation">.</span><span class="token function">getTrainTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">long</span> betweenDay <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>date<span class="token punctuation">.</span></span>DateUtil</span><span class="token punctuation">.</span><span class="token function">betweenDay</span><span class="token punctuation">(</span>each<span class="token punctuation">.</span><span class="token function">getDepartureTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getArrivalTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//到达天数</span>
        result<span class="token punctuation">.</span><span class="token function">setDaysArrived</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> betweenDay<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//销售状态 0：可售 1：不可售 2：未知</span>
        result<span class="token punctuation">.</span><span class="token function">setSaleStatus</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span>trainDO<span class="token punctuation">.</span><span class="token function">getSaleTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        result<span class="token punctuation">.</span><span class="token function">setSaleTime</span><span class="token punctuation">(</span>trainDO<span class="token punctuation">.</span><span class="token function">getSaleTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>trainDO<span class="token punctuation">.</span><span class="token function">getTrainBrand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            trainBrandSet<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>trainDO<span class="token punctuation">.</span><span class="token function">getTrainBrand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token operator">::</span><span class="token function">parseInt</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TrainStationPriceDO</span><span class="token punctuation">&gt;</span></span> trainStationPriceQueryWrapper <span class="token operator">=</span> <span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token function">lambdaQuery</span><span class="token punctuation">(</span><span class="token class-name">TrainStationPriceDO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">TrainStationPriceDO</span><span class="token operator">::</span><span class="token function">getDeparture</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getDeparture</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">TrainStationPriceDO</span><span class="token operator">::</span><span class="token function">getArrival</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getArrival</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">TrainStationPriceDO</span><span class="token operator">::</span><span class="token function">getTrainId</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getTrainId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TrainStationPriceDO</span><span class="token punctuation">&gt;</span></span> trainStationPriceDOList <span class="token operator">=</span> trainStationPriceMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>trainStationPriceQueryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SeatClassDTO</span><span class="token punctuation">&gt;</span></span> seatClassList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">StringRedisTemplate</span> stringRedisTemplate <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">StringRedisTemplate</span><span class="token punctuation">)</span> distributedCache<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        trainStationPriceDOList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> seatType <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getSeatType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> keySuffix <span class="token operator">=</span> <span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;_&quot;</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getTrainId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> item<span class="token punctuation">.</span><span class="token function">getDeparture</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> item<span class="token punctuation">.</span><span class="token function">getArrival</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Object</span> quantityObj <span class="token operator">=</span> stringRedisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">TRAIN_STATION_REMAINING_TICKET</span> <span class="token operator">+</span> keySuffix<span class="token punctuation">,</span> seatType<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> quantity <span class="token operator">=</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>quantityObj<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token operator">::</span><span class="token function">toString</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token operator">::</span><span class="token function">parseInt</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">orElseGet</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> seatMarginMap <span class="token operator">=</span> seatMarginCacheLoader<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>each<span class="token punctuation">.</span><span class="token function">getTrainId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> seatType<span class="token punctuation">,</span> item<span class="token punctuation">.</span><span class="token function">getDeparture</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> item<span class="token punctuation">.</span><span class="token function">getArrival</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">return</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>seatMarginMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getSeatType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token operator">::</span><span class="token function">parseInt</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            seatClassList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SeatClassDTO</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getSeatType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> quantity<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">divide</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token string">&quot;100&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">RoundingMode</span><span class="token punctuation">.</span><span class="token constant">HALF_UP</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        result<span class="token punctuation">.</span><span class="token function">setSeatClassList</span><span class="token punctuation">(</span>seatClassList<span class="token punctuation">)</span><span class="token punctuation">;</span>
        seatResults<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token class-name">TicketPageQueryRespDTO</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">trainList</span><span class="token punctuation">(</span>seatResults<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">departureStationList</span><span class="token punctuation">(</span><span class="token function">buildDepartureStationList</span><span class="token punctuation">(</span>seatResults<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">arrivalStationList</span><span class="token punctuation">(</span><span class="token function">buildArrivalStationList</span><span class="token punctuation">(</span>seatResults<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">trainBrandList</span><span class="token punctuation">(</span>trainBrandSet<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">seatClassTypeList</span><span class="token punctuation">(</span><span class="token function">buildSeatClassList</span><span class="token punctuation">(</span>seatResults<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="责任链模式检查参数" tabindex="-1"><a class="header-anchor" href="#责任链模式检查参数" aria-hidden="true">#</a> 责任链模式检查参数</h3><p>当请求进入到这个方法的时候，会先走责任链模式，校验出发站点和到达站点是否存在，从缓存中查询，如果缓存中也不存在，则从数据库中查询，都不存在时，就抛异常，以下是责任链模式的的校验代码</p><p><img src="https://local-imge.oss-cn-beijing.aliyuncs.com/images/image-20230904215321930.png" alt="image-20230904215321930"></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handler</span><span class="token punctuation">(</span><span class="token class-name">TicketPageQueryReqDTO</span> requestParam<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>requestParam<span class="token punctuation">.</span><span class="token function">getDepartureDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toInstant</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">atZone</span><span class="token punctuation">(</span><span class="token class-name">ZoneId</span><span class="token punctuation">.</span><span class="token function">systemDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocalDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isBefore</span><span class="token punctuation">(</span><span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ClientException</span><span class="token punctuation">(</span><span class="token string">&quot;出发日期不能小于当前日期&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 验证出发地和目的地是否存在</span>
        <span class="token class-name">StringRedisTemplate</span> stringRedisTemplate <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">StringRedisTemplate</span><span class="token punctuation">)</span> distributedCache<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HashOperations</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> hashOperations <span class="token operator">=</span> stringRedisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> actualExistList <span class="token operator">=</span> hashOperations<span class="token punctuation">.</span><span class="token function">multiGet</span><span class="token punctuation">(</span>
                <span class="token constant">QUERY_ALL_REGION_LIST</span><span class="token punctuation">,</span>
                <span class="token class-name">ListUtil</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span>requestParam<span class="token punctuation">.</span><span class="token function">getFromStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> requestParam<span class="token punctuation">.</span><span class="token function">getToStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> emptyCount <span class="token operator">=</span> actualExistList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token operator">::</span><span class="token function">isNull</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>emptyCount <span class="token operator">==</span> <span class="token number">0L</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>emptyCount <span class="token operator">==</span> <span class="token number">2L</span> <span class="token operator">&amp;&amp;</span> <span class="token constant">FLAG</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>distributedCache<span class="token punctuation">.</span><span class="token function">hasKey</span><span class="token punctuation">(</span><span class="token constant">QUERY_ALL_REGION_LIST</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token operator">||</span> emptyCount <span class="token operator">==</span> <span class="token number">1L</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ClientException</span><span class="token punctuation">(</span><span class="token string">&quot;出发地或目的地不存在&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">RLock</span> lock <span class="token operator">=</span> redissonClient<span class="token punctuation">.</span><span class="token function">getLock</span><span class="token punctuation">(</span><span class="token constant">LOCK_QUERY_ALL_REGION_LIST</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>distributedCache<span class="token punctuation">.</span><span class="token function">hasKey</span><span class="token punctuation">(</span><span class="token constant">QUERY_ALL_REGION_LIST</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                actualExistList <span class="token operator">=</span> hashOperations<span class="token punctuation">.</span><span class="token function">multiGet</span><span class="token punctuation">(</span>
                        <span class="token constant">QUERY_ALL_REGION_LIST</span><span class="token punctuation">,</span>
                        <span class="token class-name">ListUtil</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span>requestParam<span class="token punctuation">.</span><span class="token function">getFromStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> requestParam<span class="token punctuation">.</span><span class="token function">getToStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">)</span><span class="token punctuation">;</span>
                emptyCount <span class="token operator">=</span> actualExistList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token operator">::</span><span class="token function">nonNull</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>emptyCount <span class="token operator">!=</span> <span class="token number">2L</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ClientException</span><span class="token punctuation">(</span><span class="token string">&quot;出发地或目的地不存在&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RegionDO</span><span class="token punctuation">&gt;</span></span> regionDOList <span class="token operator">=</span> regionMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span><span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token function">emptyWrapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">StationDO</span><span class="token punctuation">&gt;</span></span> stationDOList <span class="token operator">=</span> stationMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span><span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token function">emptyWrapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> regionValueMap <span class="token operator">=</span> <span class="token class-name">Maps</span><span class="token punctuation">.</span><span class="token function">newHashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">RegionDO</span> each <span class="token operator">:</span> regionDOList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                regionValueMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>each<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">StationDO</span> each <span class="token operator">:</span> stationDOList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                regionValueMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>each<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            hashOperations<span class="token punctuation">.</span><span class="token function">putAll</span><span class="token punctuation">(</span><span class="token constant">QUERY_ALL_REGION_LIST</span><span class="token punctuation">,</span> regionValueMap<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token constant">FLAG</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            actualExistList <span class="token operator">=</span> hashOperations<span class="token punctuation">.</span><span class="token function">multiGet</span><span class="token punctuation">(</span>
                    <span class="token constant">QUERY_ALL_REGION_LIST</span><span class="token punctuation">,</span>
                    <span class="token class-name">ListUtil</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span>requestParam<span class="token punctuation">.</span><span class="token function">getFromStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> requestParam<span class="token punctuation">.</span><span class="token function">getToStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
            emptyCount <span class="token operator">=</span> actualExistList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token operator">::</span><span class="token function">nonNull</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>emptyCount <span class="token operator">!=</span> <span class="token number">2L</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ClientException</span><span class="token punctuation">(</span><span class="token string">&quot;出发地或目的地不存在&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>验证出发地和目的地是否存在的时候，在查询数据库时，使用分布式锁，然后在准备查询数据库的时候，又查了一次缓存，目的是还减轻MySQL的压力</p><h3 id="查询地区之间的站点" tabindex="-1"><a class="header-anchor" href="#查询地区之间的站点" aria-hidden="true">#</a> 查询地区之间的站点</h3><p>走完责任链模式以后，就会按照地区的Code查询地区</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">StationDO</span> fromStationDO <span class="token operator">=</span> stationMapper<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span><span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token function">lambdaQuery</span><span class="token punctuation">(</span><span class="token class-name">StationDO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">StationDO</span><span class="token operator">::</span><span class="token function">getCode</span><span class="token punctuation">,</span> requestParam<span class="token punctuation">.</span><span class="token function">getFromStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">StationDO</span> toStationDO <span class="token operator">=</span> stationMapper<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span><span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token function">lambdaQuery</span><span class="token punctuation">(</span><span class="token class-name">StationDO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">StationDO</span><span class="token operator">::</span><span class="token function">getCode</span><span class="token punctuation">,</span> requestParam<span class="token punctuation">.</span><span class="token function">getToStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来就是查询地区之间的站点，查询的是列车和站点之间的关系表</p><p>代码如下</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TrainStationRelationDO</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token function">lambdaQuery</span><span class="token punctuation">(</span><span class="token class-name">TrainStationRelationDO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">TrainStationRelationDO</span><span class="token operator">::</span><span class="token function">getStartRegion</span><span class="token punctuation">,</span> fromStationDO<span class="token punctuation">.</span><span class="token function">getRegionName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">TrainStationRelationDO</span><span class="token operator">::</span><span class="token function">getEndRegion</span><span class="token punctuation">,</span> toStationDO<span class="token punctuation">.</span><span class="token function">getRegionName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TrainStationRelationDO</span><span class="token punctuation">&gt;</span></span> trainStationRelationList <span class="token operator">=</span> trainStationRelationMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TicketListDTO</span><span class="token punctuation">&gt;</span></span> seatResults <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> trainBrandSet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面是列车与站点之间的关系，看起来比较直观</p><p><img src="https://local-imge.oss-cn-beijing.aliyuncs.com/images/image-20230904215756289.png" alt="image-20230904215756289"></p><p><img src="https://local-imge.oss-cn-beijing.aliyuncs.com/images/image-20230904215810458.png" alt="image-20230904215810458"></p><h3 id="查询列车" tabindex="-1"><a class="header-anchor" href="#查询列车" aria-hidden="true">#</a> 查询列车</h3><p>可以看到，在列车与站点之间的关系表中，还有一列，是列车的id，可以直接拿到列车的id，然后查询是那一趟列车，接下来就是查询站点之间的票了，大概就是根据从刚才的查询中查到的列车id，去查询这一趟列车在这一个区间的票，可以分为很多种，一等座、二等座、高铁、普快等等。</p><h3 id="查询票价" tabindex="-1"><a class="header-anchor" href="#查询票价" aria-hidden="true">#</a> 查询票价</h3><p>根据查询出来的列车封装成带有票价、出发地点、目的地、出发时间、各种作为类型的一趟火车，现在火车有了，还需要查询余票，以及票价</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TrainStationPriceDO</span><span class="token punctuation">&gt;</span></span> trainStationPriceQueryWrapper <span class="token operator">=</span> <span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token function">lambdaQuery</span><span class="token punctuation">(</span><span class="token class-name">TrainStationPriceDO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">TrainStationPriceDO</span><span class="token operator">::</span><span class="token function">getDeparture</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getDeparture</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">TrainStationPriceDO</span><span class="token operator">::</span><span class="token function">getArrival</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getArrival</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">TrainStationPriceDO</span><span class="token operator">::</span><span class="token function">getTrainId</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getTrainId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TrainStationPriceDO</span><span class="token punctuation">&gt;</span></span> trainStationPriceDOList <span class="token operator">=</span> trainStationPriceMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>trainStationPriceQueryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这句代码就是在封装的过程中，查询这一趟列车从用户搜索的出发地到目的地的票价</p><p><img src="https://local-imge.oss-cn-beijing.aliyuncs.com/images/image-20230904220623134.png" alt="image-20230904220623134"></p><p><img src="https://local-imge.oss-cn-beijing.aliyuncs.com/images/image-20230904220636784.png" alt="image-20230904220636784"></p><p>大概就是这样，这张表会存储每一趟列车的出发站点与目的地，座位类型与票价等</p><h3 id="查数据库" tabindex="-1"><a class="header-anchor" href="#查数据库" aria-hidden="true">#</a> 查数据库</h3><p>查询完座位类型，票价，现在需要查询余票了，余票是放在Redis缓存中的，所以需要从Redis中查询，首先就是获取缓存对象，拼接key等</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>trainStationPriceDOList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> seatType <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getSeatType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> keySuffix <span class="token operator">=</span> <span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;_&quot;</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getTrainId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> item<span class="token punctuation">.</span><span class="token function">getDeparture</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> item<span class="token punctuation">.</span><span class="token function">getArrival</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Object</span> quantityObj <span class="token operator">=</span> stringRedisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">TRAIN_STATION_REMAINING_TICKET</span> <span class="token operator">+</span> keySuffix<span class="token punctuation">,</span> seatType<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> quantity <span class="token operator">=</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>quantityObj<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token operator">::</span><span class="token function">toString</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token operator">::</span><span class="token function">parseInt</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">orElseGet</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> seatMarginMap <span class="token operator">=</span> seatMarginCacheLoader<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>each<span class="token punctuation">.</span><span class="token function">getTrainId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> seatType<span class="token punctuation">,</span> item<span class="token punctuation">.</span><span class="token function">getDeparture</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> item<span class="token punctuation">.</span><span class="token function">getArrival</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>seatMarginMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getSeatType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token operator">::</span><span class="token function">parseInt</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    seatClassList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SeatClassDTO</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getSeatType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> quantity<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">divide</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token string">&quot;100&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">RoundingMode</span><span class="token punctuation">.</span><span class="token constant">HALF_UP</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
result<span class="token punctuation">.</span><span class="token function">setSeatClassList</span><span class="token punctuation">(</span>seatClassList<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这段代码就是查询列车座位的余票数，通过查询出来的座位，然后通过三个参数列车id、出发站点、到达站点拼接成一个key去查询余票，因为是通过hash表的形式进行存储的，所以还需要一个key，也就是通过座位类型去区别的</p><h3 id="查缓存" tabindex="-1"><a class="header-anchor" href="#查缓存" aria-hidden="true">#</a> 查缓存</h3><p>如果查询到了，就直接返回，如果查询不到，就需要去查询数据库，然后再将从数据库中查到的内容，更新到Redis中去，以下是在redis中查询不到的场景</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token punctuation">.</span><span class="token function">orElseGet</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> seatMarginMap <span class="token operator">=</span> seatMarginCacheLoader<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>each<span class="token punctuation">.</span><span class="token function">getTrainId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> seatType<span class="token punctuation">,</span> item<span class="token punctuation">.</span><span class="token function">getDeparture</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> item<span class="token punctuation">.</span><span class="token function">getArrival</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>查询不到，会走这个方法<code>seatMarginCacheLoader.load</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">load</span><span class="token punctuation">(</span><span class="token class-name">String</span> trainId<span class="token punctuation">,</span> <span class="token class-name">String</span> seatType<span class="token punctuation">,</span> <span class="token class-name">String</span> departure<span class="token punctuation">,</span> <span class="token class-name">String</span> arrival<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> trainStationRemainingTicketMaps <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> keySuffix <span class="token operator">=</span> <span class="token class-name">CacheUtil</span><span class="token punctuation">.</span><span class="token function">buildKey</span><span class="token punctuation">(</span>trainId<span class="token punctuation">,</span> departure<span class="token punctuation">,</span> arrival<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">RLock</span> lock <span class="token operator">=</span> redissonClient<span class="token punctuation">.</span><span class="token function">getLock</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token constant">LOCK_SAFE_LOAD_SEAT_MARGIN_GET</span><span class="token punctuation">,</span> keySuffix<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">StringRedisTemplate</span> stringRedisTemplate <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">StringRedisTemplate</span><span class="token punctuation">)</span> distributedCache<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Object</span> quantityObj <span class="token operator">=</span> stringRedisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">TRAIN_STATION_REMAINING_TICKET</span> <span class="token operator">+</span> keySuffix<span class="token punctuation">,</span> seatType<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CacheUtil</span><span class="token punctuation">.</span><span class="token function">isNullOrBlank</span><span class="token punctuation">(</span>quantityObj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">TrainDO</span> trainDO <span class="token operator">=</span> trainMapper<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span>trainId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RouteDTO</span><span class="token punctuation">&gt;</span></span> routeDTOList <span class="token operator">=</span> trainStationService<span class="token punctuation">.</span><span class="token function">listTrainStationRoute</span><span class="token punctuation">(</span>trainId<span class="token punctuation">,</span> trainDO<span class="token punctuation">.</span><span class="token function">getStartStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> trainDO<span class="token punctuation">.</span><span class="token function">getEndStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">switch</span> <span class="token punctuation">(</span>trainDO<span class="token punctuation">.</span><span class="token function">getTrainType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// TODO 通过已有列车类型座位枚举重构</span>
                <span class="token keyword">case</span> <span class="token number">0</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">RouteDTO</span> each <span class="token operator">:</span> routeDTOList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> trainStationRemainingTicket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        trainStationRemainingTicket<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span> <span class="token function">selectSeatMargin</span><span class="token punctuation">(</span>trainId<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getStartStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getEndStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        trainStationRemainingTicket<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token function">selectSeatMargin</span><span class="token punctuation">(</span>trainId<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getStartStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getEndStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        trainStationRemainingTicket<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span> <span class="token function">selectSeatMargin</span><span class="token punctuation">(</span>trainId<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getStartStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getEndStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">String</span> actualKeySuffix <span class="token operator">=</span> <span class="token class-name">CacheUtil</span><span class="token punctuation">.</span><span class="token function">buildKey</span><span class="token punctuation">(</span>trainId<span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getStartStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getEndStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        trainStationRemainingTicketMaps<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token constant">TRAIN_STATION_REMAINING_TICKET</span> <span class="token operator">+</span> actualKeySuffix<span class="token punctuation">,</span> trainStationRemainingTicket<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">case</span> <span class="token number">1</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">RouteDTO</span> each <span class="token operator">:</span> routeDTOList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> trainStationRemainingTicket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        trainStationRemainingTicket<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span> <span class="token function">selectSeatMargin</span><span class="token punctuation">(</span>trainId<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getStartStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getEndStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        trainStationRemainingTicket<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;4&quot;</span><span class="token punctuation">,</span> <span class="token function">selectSeatMargin</span><span class="token punctuation">(</span>trainId<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getStartStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getEndStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        trainStationRemainingTicket<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;5&quot;</span><span class="token punctuation">,</span> <span class="token function">selectSeatMargin</span><span class="token punctuation">(</span>trainId<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getStartStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getEndStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        trainStationRemainingTicket<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;13&quot;</span><span class="token punctuation">,</span> <span class="token function">selectSeatMargin</span><span class="token punctuation">(</span>trainId<span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getStartStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getEndStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">String</span> actualKeySuffix <span class="token operator">=</span> <span class="token class-name">CacheUtil</span><span class="token punctuation">.</span><span class="token function">buildKey</span><span class="token punctuation">(</span>trainId<span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getStartStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getEndStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        trainStationRemainingTicketMaps<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token constant">TRAIN_STATION_REMAINING_TICKET</span> <span class="token operator">+</span> actualKeySuffix<span class="token punctuation">,</span> trainStationRemainingTicket<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">case</span> <span class="token number">2</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">RouteDTO</span> each <span class="token operator">:</span> routeDTOList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> trainStationRemainingTicket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        trainStationRemainingTicket<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;6&quot;</span><span class="token punctuation">,</span> <span class="token function">selectSeatMargin</span><span class="token punctuation">(</span>trainId<span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getStartStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getEndStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        trainStationRemainingTicket<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;7&quot;</span><span class="token punctuation">,</span> <span class="token function">selectSeatMargin</span><span class="token punctuation">(</span>trainId<span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getStartStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getEndStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        trainStationRemainingTicket<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;8&quot;</span><span class="token punctuation">,</span> <span class="token function">selectSeatMargin</span><span class="token punctuation">(</span>trainId<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getStartStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getEndStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        trainStationRemainingTicket<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;13&quot;</span><span class="token punctuation">,</span> <span class="token function">selectSeatMargin</span><span class="token punctuation">(</span>trainId<span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getStartStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getEndStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">String</span> actualKeySuffix <span class="token operator">=</span> <span class="token class-name">CacheUtil</span><span class="token punctuation">.</span><span class="token function">buildKey</span><span class="token punctuation">(</span>trainId<span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getStartStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getEndStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        trainStationRemainingTicketMaps<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token constant">TRAIN_STATION_REMAINING_TICKET</span> <span class="token operator">+</span> actualKeySuffix<span class="token punctuation">,</span> trainStationRemainingTicket<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// TODO LUA 脚本执行</span>
            trainStationRemainingTicketMaps<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">,</span> cacheMap<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> stringRedisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">putAll</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">,</span> cacheMap<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>trainStationRemainingTicketMaps<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">TRAIN_STATION_REMAINING_TICKET</span> <span class="token operator">+</span> keySuffix<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个方法很长，但是看起来还算能理解，从头到尾看，首先就是创建一个map，然后拼接一个key，然后获取分布式锁</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> trainStationRemainingTicketMaps <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> keySuffix <span class="token operator">=</span> <span class="token class-name">CacheUtil</span><span class="token punctuation">.</span><span class="token function">buildKey</span><span class="token punctuation">(</span>trainId<span class="token punctuation">,</span> departure<span class="token punctuation">,</span> arrival<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">RLock</span> lock <span class="token operator">=</span> redissonClient<span class="token punctuation">.</span><span class="token function">getLock</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token constant">LOCK_SAFE_LOAD_SEAT_MARGIN_GET</span><span class="token punctuation">,</span> keySuffix<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后就是获取缓存组件，再查询一次缓存，看缓存中是否有数据，目的是为了减轻MySQL的压力</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">StringRedisTemplate</span> stringRedisTemplate <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">StringRedisTemplate</span><span class="token punctuation">)</span> distributedCache<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Object</span> quantityObj <span class="token operator">=</span> stringRedisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">TRAIN_STATION_REMAINING_TICKET</span> <span class="token operator">+</span> keySuffix<span class="token punctuation">,</span> seatType<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果查不到，就会继续往下。先查了当前的列车对象</p><p><img src="https://local-imge.oss-cn-beijing.aliyuncs.com/images/image-20230904221813840.png" alt="image-20230904221813840"></p><p><img src="https://local-imge.oss-cn-beijing.aliyuncs.com/images/image-20230904221829035.png" alt="image-20230904221829035"></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">TrainDO</span> trainDO <span class="token operator">=</span> trainMapper<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span>trainId<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RouteDTO</span><span class="token punctuation">&gt;</span></span> routeDTOList <span class="token operator">=</span> trainStationService<span class="token punctuation">.</span><span class="token function">listTrainStationRoute</span><span class="token punctuation">(</span>trainId<span class="token punctuation">,</span> trainDO<span class="token punctuation">.</span><span class="token function">getStartStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> trainDO<span class="token punctuation">.</span><span class="token function">getEndStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后调用了<code>trainStationService.listTrainStationRoute</code>，继续往下分析</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 计算列车站点路线关系
 * 获取开始站点和目的站点及中间站点信息
 *
 * <span class="token keyword">@param</span> <span class="token parameter">trainId</span>   列车 ID
 * <span class="token keyword">@param</span> <span class="token parameter">departure</span> 出发站
 * <span class="token keyword">@param</span> <span class="token parameter">arrival</span>   到达站
 * <span class="token keyword">@return</span> 列车站点路线关系信息
 */</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RouteDTO</span><span class="token punctuation">&gt;</span></span> <span class="token function">listTrainStationRoute</span><span class="token punctuation">(</span><span class="token class-name">String</span> trainId<span class="token punctuation">,</span> <span class="token class-name">String</span> departure<span class="token punctuation">,</span> <span class="token class-name">String</span> arrival<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>点击去查看方法注释，这是计算开始站点与目的站点之间的关系，需要传入三个参数，分别是列车id、出发地和目的地</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RouteDTO</span><span class="token punctuation">&gt;</span></span> <span class="token function">listTrainStationRoute</span><span class="token punctuation">(</span><span class="token class-name">String</span> trainId<span class="token punctuation">,</span> <span class="token class-name">String</span> departure<span class="token punctuation">,</span> <span class="token class-name">String</span> arrival<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TrainStationDO</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token function">lambdaQuery</span><span class="token punctuation">(</span><span class="token class-name">TrainStationDO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">TrainStationDO</span><span class="token operator">::</span><span class="token function">getTrainId</span><span class="token punctuation">,</span> trainId<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name">TrainStationDO</span><span class="token operator">::</span><span class="token function">getDeparture</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TrainStationDO</span><span class="token punctuation">&gt;</span></span> trainStationDOList <span class="token operator">=</span> trainStationMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> trainStationAllList <span class="token operator">=</span> trainStationDOList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">TrainStationDO</span><span class="token operator">::</span><span class="token function">getDeparture</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">StationCalculateUtil</span><span class="token punctuation">.</span><span class="token function">throughStation</span><span class="token punctuation">(</span>trainStationAllList<span class="token punctuation">,</span> departure<span class="token punctuation">,</span> arrival<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>拼接查询条件查询了列车站点关系表，这里是第二次查询，通过列车id以及起始站点，可以拼接成一趟列车的经过站点，最后调用了<code>StationCalculateUtil.throughStation(trainStationAllList, departure, arrival)</code>，再继续深入了解</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 计算出发站和终点站中间的站点（包含出发站和终点站）
 *
 * <span class="token keyword">@param</span> <span class="token parameter">stations</span>     所有站点数据
 * <span class="token keyword">@param</span> <span class="token parameter">startStation</span> 出发站
 * <span class="token keyword">@param</span> <span class="token parameter">endStation</span>   终点站
 * <span class="token keyword">@return</span> 出发站和终点站中间的站点（包含出发站和终点站）
 */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RouteDTO</span><span class="token punctuation">&gt;</span></span> <span class="token function">throughStation</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> stations<span class="token punctuation">,</span> <span class="token class-name">String</span> startStation<span class="token punctuation">,</span> <span class="token class-name">String</span> endStation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RouteDTO</span><span class="token punctuation">&gt;</span></span> routesToDeduct <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> startIndex <span class="token operator">=</span> stations<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>startStation<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> endIndex <span class="token operator">=</span> stations<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>endStation<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>startIndex <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> endIndex <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> startIndex <span class="token operator">&gt;=</span> endIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> routesToDeduct<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> startIndex<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> endIndex<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> endIndex<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> currentStation <span class="token operator">=</span> stations<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> nextStation <span class="token operator">=</span> stations<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">RouteDTO</span> routeDTO <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RouteDTO</span><span class="token punctuation">(</span>currentStation<span class="token punctuation">,</span> nextStation<span class="token punctuation">)</span><span class="token punctuation">;</span>
            routesToDeduct<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>routeDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> routesToDeduct<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>是的，查询出来的站点是无序的，需要计算一下</p><p>然后回到最初的起点（快晕了）</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">TrainDO</span> trainDO <span class="token operator">=</span> trainMapper<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span>trainId<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RouteDTO</span><span class="token punctuation">&gt;</span></span> routeDTOList <span class="token operator">=</span> trainStationService<span class="token punctuation">.</span><span class="token function">listTrainStationRoute</span><span class="token punctuation">(</span>trainId<span class="token punctuation">,</span> trainDO<span class="token punctuation">.</span><span class="token function">getStartStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> trainDO<span class="token punctuation">.</span><span class="token function">getEndStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>回到了这里，然后<code>routeDTOList</code>里面就是列车的出发站点与到达站点了</p><p>然后根据列车的座位类型，来进行余票查询</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">case</span> <span class="token number">0</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">RouteDTO</span> each <span class="token operator">:</span> routeDTOList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> trainStationRemainingTicket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        trainStationRemainingTicket<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span> <span class="token function">selectSeatMargin</span><span class="token punctuation">(</span>trainId<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getStartStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getEndStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        trainStationRemainingTicket<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token function">selectSeatMargin</span><span class="token punctuation">(</span>trainId<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getStartStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getEndStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        trainStationRemainingTicket<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span> <span class="token function">selectSeatMargin</span><span class="token punctuation">(</span>trainId<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getStartStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getEndStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> actualKeySuffix <span class="token operator">=</span> <span class="token class-name">CacheUtil</span><span class="token punctuation">.</span><span class="token function">buildKey</span><span class="token punctuation">(</span>trainId<span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getStartStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getEndStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        trainStationRemainingTicketMaps<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token constant">TRAIN_STATION_REMAINING_TICKET</span> <span class="token operator">+</span> actualKeySuffix<span class="token punctuation">,</span> trainStationRemainingTicket<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>selectSeatMargin(trainId, 0, each.getStartStation(), each.getEndStation()))</code>又是什么，继续往下再看</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">selectSeatMargin</span><span class="token punctuation">(</span><span class="token class-name">String</span> trainId<span class="token punctuation">,</span> <span class="token class-name">Integer</span> type<span class="token punctuation">,</span> <span class="token class-name">String</span> departure<span class="token punctuation">,</span> <span class="token class-name">String</span> arrival<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SeatDO</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token function">lambdaQuery</span><span class="token punctuation">(</span><span class="token class-name">SeatDO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">SeatDO</span><span class="token operator">::</span><span class="token function">getTrainId</span><span class="token punctuation">,</span> trainId<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">SeatDO</span><span class="token operator">::</span><span class="token function">getSeatType</span><span class="token punctuation">,</span> type<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">SeatDO</span><span class="token operator">::</span><span class="token function">getSeatStatus</span><span class="token punctuation">,</span> <span class="token class-name">SeatStatusEnum</span><span class="token punctuation">.</span><span class="token constant">AVAILABLE</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">SeatDO</span><span class="token operator">::</span><span class="token function">getStartStation</span><span class="token punctuation">,</span> departure<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">SeatDO</span><span class="token operator">::</span><span class="token function">getEndStation</span><span class="token punctuation">,</span> arrival<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>seatMapper<span class="token punctuation">.</span><span class="token function">selectCount</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token operator">::</span><span class="token function">valueOf</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>OK，这是这的查询余票了，查询这一趟列车的不同座位的余票，然后放到一开始新建的hashmap中<code>trainStationRemainingTicketMaps.put(TRAIN_STATION_REMAINING_TICKET + actualKeySuffix, trainStationRemainingTicket)</code></p><h3 id="写入缓存" tabindex="-1"><a class="header-anchor" href="#写入缓存" aria-hidden="true">#</a> 写入缓存</h3><p>然后最后通过lua脚本写入到缓存中</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>trainStationRemainingTicketMaps<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">,</span> cacheMap<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> stringRedisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">putAll</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">,</span> cacheMap<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>最后，解开分布式锁，然后大功告成！！！！！</p><p>很复杂，最后看一下流程图，应该会清晰很多</p><p><img src="https://local-imge.oss-cn-beijing.aliyuncs.com/images/image-20230904223129816.png" alt="image-20230904223129816"></p><h3 id="大概思路" tabindex="-1"><a class="header-anchor" href="#大概思路" aria-hidden="true">#</a> 大概思路</h3><p>1、验证参数</p><p>2、查询站点信息</p><p>3、查询站点之间的列车</p><p>4、查询列车余票</p><p>5、构建返回数据</p><p>最复杂的就是查询余票，因为余票是写入到缓存中的，所以需要查缓存，查不到还要去查数据库，然后再写入缓存，这是缓存中存放的票量数据</p><p><img src="https://local-imge.oss-cn-beijing.aliyuncs.com/images/image-20230904224314668.png" alt="image-20230904224314668"></p>`,75),o=[c];function e(u,i){return s(),a("div",null,o)}const r=n(p,[["render",e],["__file","查询车票.html.vue"]]);export{r as default};
