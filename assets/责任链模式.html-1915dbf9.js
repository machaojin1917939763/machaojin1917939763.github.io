import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,b as t}from"./app-ca4b6a1c.js";const p={},e=t(`<h2 id="什么是责任链模式" tabindex="-1"><a class="header-anchor" href="#什么是责任链模式" aria-hidden="true">#</a> 什么是责任链模式</h2><p>责任链模式（Chain of Responsibility Pattern）是一种行为设计模式，它为请求创建了一个接收者对象的链。这个模式给予请求的类型，将请求的发送者和接收者解耦。这允许多个对象处理请求，或者将请求传递给链中的下一个对象。责任链模式通常在有多个处理级别或者处理步骤时使用。</p><p>责任链模式的主要组成部分是：</p><ol><li><strong>处理者（Handler）</strong>: 定义了处理请求的接口。它通常会定义一个方法来设置下一个处理者，并定义一个方法来处理请求。</li><li><strong>具体处理者（ConcreteHandler）</strong>: 实现处理者的接口，并处理它负责的请求。如果不能处理该请求，它可以将请求传递给链中的下一个处理者。</li></ol><p>责任链模式的优点：</p><ol><li><strong>解耦</strong>: 发送者和接收者之间的解耦意味着发送者不需要知道链的结构，只需要知道请求会被处理即可。</li><li><strong>动态添加或删除责任</strong>: 可以在运行时动态地添加或删除处理者，或者改变链的结构。</li><li><strong>灵活性</strong>: 可以根据需要决定哪些请求应该被处理，哪些应该被忽略，或者应该如何传递给链中的下一个处理者。</li></ol><p>责任链模式的缺点：</p><ol><li><strong>性能问题</strong>: 如果链太长或者处理步骤太多，可能会导致性能问题。</li><li><strong>不保证请求一定被处理</strong>: 如果没有任何处理者处理请求，请求可能会在链的末端被丢弃。</li></ol><p>一个常见的责任链模式的例子是GUI中的事件处理，当一个事件（如点击事件）发生时，它首先会被传递给最具体的组件（如按钮），如果该组件没有处理该事件，它会被传递给该组件的父组件，以此类推，直到事件被处理或者达到顶级组件。</p><h2 id="项目中ticket模块责任链模式" tabindex="-1"><a class="header-anchor" href="#项目中ticket模块责任链模式" aria-hidden="true">#</a> 项目中ticket模块责任链模式</h2><p>有一个顶级接口，定义了责任链模式的handler和mark</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 抽象业务责任链组件
 *
 * 
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">AbstractChainHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">Ordered</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 执行责任链逻辑
     *
     * <span class="token keyword">@param</span> <span class="token parameter">requestParam</span> 责任链执行入参
     */</span>
    <span class="token keyword">void</span> <span class="token function">handler</span><span class="token punctuation">(</span><span class="token class-name">T</span> requestParam<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@return</span> 责任链组件标识
     */</span>
    <span class="token class-name">String</span> <span class="token function">mark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Ordered</code>代表排序，也就是当前handler在第几个执行</p><p>然后再根据自定接口来定义不通过的责任链，在子接口中设置mark</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 列车车票查询过滤器
 *
 *
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">TrainTicketQueryChainFilter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token class-name">TicketPageQueryReqDTO</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">AbstractChainHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TicketPageQueryReqDTO</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">default</span> <span class="token class-name">String</span> <span class="token function">mark</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">TicketChainMarkEnum</span><span class="token punctuation">.</span><span class="token constant">TRAIN_QUERY_FILTER</span><span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 列车购买车票过滤器
 *
 *
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">TrainPurchaseTicketChainFilter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token class-name">PurchaseTicketReqDTO</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">AbstractChainHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PurchaseTicketReqDTO</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">default</span> <span class="token class-name">String</span> <span class="token function">mark</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">TicketChainMarkEnum</span><span class="token punctuation">.</span><span class="token constant">TRAIN_PURCHASE_TICKET_FILTER</span><span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>各自的处理器实现不通过的子接口，来实现区别</p><p>比如列车车票查询的时候，需要检查用户传递的参数是否合法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TrainTicketQueryParamNotNullChainFilter</span> <span class="token keyword">implements</span> <span class="token class-name">TrainTicketQueryChainFilter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TicketPageQueryReqDTO</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handler</span><span class="token punctuation">(</span><span class="token class-name">TicketPageQueryReqDTO</span> requestParam<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>requestParam<span class="token punctuation">.</span><span class="token function">getFromStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ClientException</span><span class="token punctuation">(</span><span class="token string">&quot;出发地不能为空&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>requestParam<span class="token punctuation">.</span><span class="token function">getToStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ClientException</span><span class="token punctuation">(</span><span class="token string">&quot;目的地不能为空&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>requestParam<span class="token punctuation">.</span><span class="token function">getDepartureDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ClientException</span><span class="token punctuation">(</span><span class="token string">&quot;出发日期不能为空&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>检查出发地或者目的地是否存在</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token annotation punctuation">@RequiredArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TrainTicketQueryParamVerifyChainFilter</span> <span class="token keyword">implements</span> <span class="token class-name">TrainTicketQueryChainFilter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TicketPageQueryReqDTO</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">RegionMapper</span> regionMapper<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">StationMapper</span> stationMapper<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">DistributedCache</span> distributedCache<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">RedissonClient</span> redissonClient<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token constant">FLAG</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handler</span><span class="token punctuation">(</span><span class="token class-name">TicketPageQueryReqDTO</span> requestParam<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>requestParam<span class="token punctuation">.</span><span class="token function">getDepartureDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toInstant</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">atZone</span><span class="token punctuation">(</span><span class="token class-name">ZoneId</span><span class="token punctuation">.</span><span class="token function">systemDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocalDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isBefore</span><span class="token punctuation">(</span><span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ClientException</span><span class="token punctuation">(</span><span class="token string">&quot;出发日期不能小于当前日期&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 验证出发地和目的地是否存在</span>
        <span class="token class-name">StringRedisTemplate</span> stringRedisTemplate <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">StringRedisTemplate</span><span class="token punctuation">)</span> distributedCache<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HashOperations</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> hashOperations <span class="token operator">=</span> stringRedisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> actualExistList <span class="token operator">=</span> hashOperations<span class="token punctuation">.</span><span class="token function">multiGet</span><span class="token punctuation">(</span>
                <span class="token constant">QUERY_ALL_REGION_LIST</span><span class="token punctuation">,</span>
                <span class="token class-name">ListUtil</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span>requestParam<span class="token punctuation">.</span><span class="token function">getFromStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> requestParam<span class="token punctuation">.</span><span class="token function">getToStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> emptyCount <span class="token operator">=</span> actualExistList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token operator">::</span><span class="token function">isNull</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>emptyCount <span class="token operator">==</span> <span class="token number">0L</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>emptyCount <span class="token operator">==</span> <span class="token number">2L</span> <span class="token operator">&amp;&amp;</span> <span class="token constant">FLAG</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>distributedCache<span class="token punctuation">.</span><span class="token function">hasKey</span><span class="token punctuation">(</span><span class="token constant">QUERY_ALL_REGION_LIST</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token operator">||</span> emptyCount <span class="token operator">==</span> <span class="token number">1L</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ClientException</span><span class="token punctuation">(</span><span class="token string">&quot;出发地或目的地不存在&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">RLock</span> lock <span class="token operator">=</span> redissonClient<span class="token punctuation">.</span><span class="token function">getLock</span><span class="token punctuation">(</span><span class="token constant">LOCK_QUERY_ALL_REGION_LIST</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>distributedCache<span class="token punctuation">.</span><span class="token function">hasKey</span><span class="token punctuation">(</span><span class="token constant">QUERY_ALL_REGION_LIST</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                actualExistList <span class="token operator">=</span> hashOperations<span class="token punctuation">.</span><span class="token function">multiGet</span><span class="token punctuation">(</span>
                        <span class="token constant">QUERY_ALL_REGION_LIST</span><span class="token punctuation">,</span>
                        <span class="token class-name">ListUtil</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span>requestParam<span class="token punctuation">.</span><span class="token function">getFromStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> requestParam<span class="token punctuation">.</span><span class="token function">getToStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">)</span><span class="token punctuation">;</span>
                emptyCount <span class="token operator">=</span> actualExistList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token operator">::</span><span class="token function">nonNull</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>emptyCount <span class="token operator">!=</span> <span class="token number">2L</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ClientException</span><span class="token punctuation">(</span><span class="token string">&quot;出发地或目的地不存在&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RegionDO</span><span class="token punctuation">&gt;</span></span> regionDOList <span class="token operator">=</span> regionMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span><span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token function">emptyWrapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">StationDO</span><span class="token punctuation">&gt;</span></span> stationDOList <span class="token operator">=</span> stationMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span><span class="token class-name">Wrappers</span><span class="token punctuation">.</span><span class="token function">emptyWrapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> regionValueMap <span class="token operator">=</span> <span class="token class-name">Maps</span><span class="token punctuation">.</span><span class="token function">newHashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">RegionDO</span> each <span class="token operator">:</span> regionDOList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                regionValueMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>each<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">StationDO</span> each <span class="token operator">:</span> stationDOList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                regionValueMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>each<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> each<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            hashOperations<span class="token punctuation">.</span><span class="token function">putAll</span><span class="token punctuation">(</span><span class="token constant">QUERY_ALL_REGION_LIST</span><span class="token punctuation">,</span> regionValueMap<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token constant">FLAG</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            actualExistList <span class="token operator">=</span> hashOperations<span class="token punctuation">.</span><span class="token function">multiGet</span><span class="token punctuation">(</span>
                    <span class="token constant">QUERY_ALL_REGION_LIST</span><span class="token punctuation">,</span>
                    <span class="token class-name">ListUtil</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span>requestParam<span class="token punctuation">.</span><span class="token function">getFromStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> requestParam<span class="token punctuation">.</span><span class="token function">getToStation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
            emptyCount <span class="token operator">=</span> actualExistList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token operator">::</span><span class="token function">nonNull</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>emptyCount <span class="token operator">!=</span> <span class="token number">2L</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ClientException</span><span class="token punctuation">(</span><span class="token string">&quot;出发地或目的地不存在&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以下是此类的执行流程</p><ol><li><p><strong>参数验证</strong>:</p><ul><li>检查<code>requestParam.getDepartureDate()</code>的日期是否在当前日期之前。如果是，则抛出一个客户端异常，提示&quot;出发日期不能小于当前日期&quot;。</li></ul></li><li><p><strong>验证出发地和目的地</strong>:</p><ul><li>从分布式缓存中获取<code>StringRedisTemplate</code>实例。</li><li>使用<code>StringRedisTemplate</code>创建一个哈希操作对象。</li><li>使用哈希操作对象查询所有地区列表中的出发地和目的地。</li><li>计算查询结果中为空的项的数量。</li></ul></li><li><p><strong>初步验证</strong>:</p><ul><li>如果没有空项，直接返回。</li><li>如果有两个空项，并且FLAG为true且QUERY_ALL_REGION_LIST不在缓存中，或者只有一个空项，则抛出一个客户端异常，提示&quot;出发地或目的地不存在&quot;。</li></ul></li><li><p><strong>加锁处理</strong>:</p><ul><li>使用<code>redissonClient</code>获取一个锁，确保以下操作是线程安全的。</li><li>再次检查QUERY_ALL_REGION_LIST是否在缓存中。 <ul><li>如果在，再次查询出发地和目的地，并验证查询结果。如果结果不满足条件，则抛出异常。</li><li>如果不在，从数据库中查询所有地区和车站，并将它们存储在缓存中。然后再次查询出发地和目的地，并验证查询结果。</li></ul></li></ul></li><li><p><strong>释放锁</strong>:</p><ul><li>无论前面的操作是否成功，都会在最后释放锁。</li></ul></li><li><p><strong>其他注意事项</strong>:</p><ul><li><code>FLAG</code>是一个全局变量，但在这段代码中，它的初始值和具体用途不明确。从代码中可以推测，当FLAG为true时，表示QUERY_ALL_REGION_LIST已经被缓存。</li><li><code>QUERY_ALL_REGION_LIST</code>是一个常量，代表在Redis中的一个键，用于存储所有地区的列表。</li><li><code>LOCK_QUERY_ALL_REGION_LIST</code>是一个常量，代表在Redis中的一个锁键，用于确保线程安全。</li><li><code>ListUtil.toList()</code>是一个工具方法，用于将多个参数转换为一个列表。</li><li><code>distributedCache</code>和<code>redissonClient</code>是外部提供的服务或客户端，用于操作分布式缓存和Redis。</li></ul></li></ol>`,23),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","责任链模式.html.vue"]]);export{r as default};
