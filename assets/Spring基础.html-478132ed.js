const e=JSON.parse('{"key":"v-17f74e74","path":"/blog/Spring/Spring%E5%9F%BA%E7%A1%80.html","title":"Spring基础","lang":"zh-CN","frontmatter":{"title":"Spring基础","order":2,"category":["Java面经"],"tag":["JVM"],"description":"Spring 概述 Spring 是一个开源的企业级 Java 应用框架，由 Rod Johnson 在 2003 年首次发布。它的主要目标是使 Java EE 开发变得更加简单，并提供一种更好的方式来构建企业级应用程序。Spring 提供了一系列的编程和配置模型，支持应用程序的开发从最小的微服务到大型企业级应用。 Spring 的核心模块 1. 核心...","head":[["meta",{"property":"og:url","content":"https://machaojin.cn/blog/Spring/Spring%E5%9F%BA%E7%A1%80.html"}],["meta",{"property":"og:site_name","content":"JavaBlog"}],["meta",{"property":"og:title","content":"Spring基础"}],["meta",{"property":"og:description","content":"Spring 概述 Spring 是一个开源的企业级 Java 应用框架，由 Rod Johnson 在 2003 年首次发布。它的主要目标是使 Java EE 开发变得更加简单，并提供一种更好的方式来构建企业级应用程序。Spring 提供了一系列的编程和配置模型，支持应用程序的开发从最小的微服务到大型企业级应用。 Spring 的核心模块 1. 核心..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-13T14:34:51.000Z"}],["meta",{"property":"article:author","content":"Mr.Chaojin"}],["meta",{"property":"article:tag","content":"JVM"}],["meta",{"property":"article:modified_time","content":"2023-09-13T14:34:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring基础\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-13T14:34:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Chaojin\\",\\"url\\":\\"https://machaojin.cn\\",\\"email\\":\\"ma@machaojin.cn\\"}]}"]]},"headers":[{"level":2,"title":"Spring 概述","slug":"spring-概述","link":"#spring-概述","children":[]},{"level":2,"title":"Spring 的核心模块","slug":"spring-的核心模块","link":"#spring-的核心模块","children":[{"level":3,"title":"1. 核心容器 (Core Container)","slug":"_1-核心容器-core-container","link":"#_1-核心容器-core-container","children":[]},{"level":3,"title":"2. 数据访问/集成 (Data Access/Integration)","slug":"_2-数据访问-集成-data-access-integration","link":"#_2-数据访问-集成-data-access-integration","children":[]},{"level":3,"title":"3. Web 模块","slug":"_3-web-模块","link":"#_3-web-模块","children":[]},{"level":3,"title":"4. 安全性 (Security)","slug":"_4-安全性-security","link":"#_4-安全性-security","children":[]},{"level":3,"title":"5. AOP (Aspect-Oriented Programming)","slug":"_5-aop-aspect-oriented-programming","link":"#_5-aop-aspect-oriented-programming","children":[]},{"level":3,"title":"6. 消息 (Messaging)","slug":"_6-消息-messaging","link":"#_6-消息-messaging","children":[]},{"level":3,"title":"7. 测试 (Testing)","slug":"_7-测试-testing","link":"#_7-测试-testing","children":[]}]},{"level":2,"title":"IoC (控制反转)","slug":"ioc-控制反转","link":"#ioc-控制反转","children":[{"level":3,"title":"IoC 的好处:","slug":"ioc-的好处","link":"#ioc-的好处","children":[]}]},{"level":2,"title":"依赖注入 (DI)","slug":"依赖注入-di","link":"#依赖注入-di","children":[{"level":3,"title":"DI 的好处:","slug":"di-的好处","link":"#di-的好处","children":[]}]},{"level":2,"title":"Spring Bean","slug":"spring-bean","link":"#spring-bean","children":[{"level":3,"title":"Spring Bean的特点:","slug":"spring-bean的特点","link":"#spring-bean的特点","children":[]},{"level":3,"title":"如何定义Spring Bean:","slug":"如何定义spring-bean","link":"#如何定义spring-bean","children":[]},{"level":3,"title":"Bean的生命周期:","slug":"bean的生命周期","link":"#bean的生命周期","children":[]}]},{"level":2,"title":"创建 Spring Bean 的方法","slug":"创建-spring-bean-的方法","link":"#创建-spring-bean-的方法","children":[{"level":3,"title":"1. 使用构造函数","slug":"_1-使用构造函数","link":"#_1-使用构造函数","children":[]},{"level":3,"title":"2. 使用 Setter 方法","slug":"_2-使用-setter-方法","link":"#_2-使用-setter-方法","children":[]},{"level":3,"title":"3. 使用注解","slug":"_3-使用注解","link":"#_3-使用注解","children":[]},{"level":3,"title":"4. 使用 Java 配置","slug":"_4-使用-java-配置","link":"#_4-使用-java-配置","children":[]},{"level":3,"title":"5. 使用工厂方法","slug":"_5-使用工厂方法","link":"#_5-使用工厂方法","children":[]},{"level":3,"title":"6. 使用Bean的继承","slug":"_6-使用bean的继承","link":"#_6-使用bean的继承","children":[]}]},{"level":2,"title":"@Component 与 @Bean 的区别","slug":"component-与-bean-的区别","link":"#component-与-bean-的区别","children":[{"level":3,"title":"1. 定义方式","slug":"_1-定义方式","link":"#_1-定义方式","children":[]},{"level":3,"title":"2. 用途","slug":"_2-用途","link":"#_2-用途","children":[]},{"level":3,"title":"3. 依赖注入","slug":"_3-依赖注入","link":"#_3-依赖注入","children":[]},{"level":3,"title":"4. 作用范围","slug":"_4-作用范围","link":"#_4-作用范围","children":[]}]},{"level":2,"title":"注入 Bean 的注解","slug":"注入-bean-的注解","link":"#注入-bean-的注解","children":[{"level":3,"title":"1. @Autowired","slug":"_1-autowired","link":"#_1-autowired","children":[]},{"level":3,"title":"2. @Inject","slug":"_2-inject","link":"#_2-inject","children":[]},{"level":3,"title":"3. @Resource","slug":"_3-resource","link":"#_3-resource","children":[]},{"level":3,"title":"4. @Value","slug":"_4-value","link":"#_4-value","children":[]}]},{"level":2,"title":"@Autowired 与 @Resource 的区别","slug":"autowired-与-resource-的区别","link":"#autowired-与-resource-的区别","children":[]},{"level":2,"title":"Bean 的作用域","slug":"bean-的作用域","link":"#bean-的作用域","children":[{"level":3,"title":"1. Singleton (单例)","slug":"_1-singleton-单例","link":"#_1-singleton-单例","children":[]},{"level":3,"title":"2. Prototype (原型)","slug":"_2-prototype-原型","link":"#_2-prototype-原型","children":[]},{"level":3,"title":"3. Request","slug":"_3-request","link":"#_3-request","children":[]},{"level":3,"title":"4. Session","slug":"_4-session","link":"#_4-session","children":[]},{"level":3,"title":"5. Application","slug":"_5-application","link":"#_5-application","children":[]},{"level":3,"title":"6. Websocket","slug":"_6-websocket","link":"#_6-websocket","children":[]}]},{"level":2,"title":"Bean 的生命周期","slug":"bean-的生命周期","link":"#bean-的生命周期","children":[{"level":3,"title":"1. 实例化 Bean","slug":"_1-实例化-bean","link":"#_1-实例化-bean","children":[]},{"level":3,"title":"2. 设置 Bean 属性","slug":"_2-设置-bean-属性","link":"#_2-设置-bean-属性","children":[]},{"level":3,"title":"3. 调用 BeanNameAware 的 setBeanName 方法","slug":"_3-调用-beannameaware-的-setbeanname-方法","link":"#_3-调用-beannameaware-的-setbeanname-方法","children":[]},{"level":3,"title":"4. 调用 BeanFactoryAware 的 setBeanFactory 方法","slug":"_4-调用-beanfactoryaware-的-setbeanfactory-方法","link":"#_4-调用-beanfactoryaware-的-setbeanfactory-方法","children":[]},{"level":3,"title":"5. 调用 ApplicationContextAware 的 setApplicationContext 方法","slug":"_5-调用-applicationcontextaware-的-setapplicationcontext-方法","link":"#_5-调用-applicationcontextaware-的-setapplicationcontext-方法","children":[]},{"level":3,"title":"6. BeanPostProcessor 的 postProcessBeforeInitialization 方法","slug":"_6-beanpostprocessor-的-postprocessbeforeinitialization-方法","link":"#_6-beanpostprocessor-的-postprocessbeforeinitialization-方法","children":[]},{"level":3,"title":"7. 调用 InitializingBean 的 afterPropertiesSet 方法","slug":"_7-调用-initializingbean-的-afterpropertiesset-方法","link":"#_7-调用-initializingbean-的-afterpropertiesset-方法","children":[]},{"level":3,"title":"8. 调用自定义的初始化方法","slug":"_8-调用自定义的初始化方法","link":"#_8-调用自定义的初始化方法","children":[]},{"level":3,"title":"9. BeanPostProcessor 的 postProcessAfterInitialization 方法","slug":"_9-beanpostprocessor-的-postprocessafterinitialization-方法","link":"#_9-beanpostprocessor-的-postprocessafterinitialization-方法","children":[]},{"level":3,"title":"10. Bean 可以使用了","slug":"_10-bean-可以使用了","link":"#_10-bean-可以使用了","children":[]},{"level":3,"title":"11. 销毁阶段","slug":"_11-销毁阶段","link":"#_11-销毁阶段","children":[]}]},{"level":2,"title":"BeanFactory 和 ApplicationContext","slug":"beanfactory-和-applicationcontext","link":"#beanfactory-和-applicationcontext","children":[{"level":3,"title":"BeanFactory","slug":"beanfactory","link":"#beanfactory","children":[]},{"level":3,"title":"ApplicationContext","slug":"applicationcontext","link":"#applicationcontext","children":[]},{"level":3,"title":"两者之间的主要区别:","slug":"两者之间的主要区别","link":"#两者之间的主要区别","children":[]}]},{"level":2,"title":"FactoryBean","slug":"factorybean","link":"#factorybean","children":[{"level":3,"title":"特点:","slug":"特点","link":"#特点","children":[]},{"level":3,"title":"主要方法:","slug":"主要方法","link":"#主要方法","children":[]}]},{"level":2,"title":"BeanFactory","slug":"beanfactory-1","link":"#beanfactory-1","children":[]},{"level":2,"title":"FactoryBean 与 BeanFactory 的区别:","slug":"factorybean-与-beanfactory-的区别","link":"#factorybean-与-beanfactory-的区别","children":[]},{"level":2,"title":"Spring IoC 容器的加载过程","slug":"spring-ioc-容器的加载过程","link":"#spring-ioc-容器的加载过程","children":[{"level":3,"title":"1. 资源定位","slug":"_1-资源定位","link":"#_1-资源定位","children":[]},{"level":3,"title":"2. 加载配置","slug":"_2-加载配置","link":"#_2-加载配置","children":[]},{"level":3,"title":"3. 注册 BeanDefinition","slug":"_3-注册-beandefinition","link":"#_3-注册-beandefinition","children":[]},{"level":3,"title":"4. 初始化 Bean","slug":"_4-初始化-bean","link":"#_4-初始化-bean","children":[]},{"level":3,"title":"5. 依赖注入","slug":"_5-依赖注入","link":"#_5-依赖注入","children":[]},{"level":3,"title":"6. 执行生命周期方法","slug":"_6-执行生命周期方法","link":"#_6-执行生命周期方法","children":[]},{"level":3,"title":"7. 完成初始化","slug":"_7-完成初始化","link":"#_7-完成初始化","children":[]}]},{"level":2,"title":"Spring 的循环依赖问题","slug":"spring-的循环依赖问题","link":"#spring-的循环依赖问题","children":[]},{"level":2,"title":"如何解决循环依赖","slug":"如何解决循环依赖","link":"#如何解决循环依赖","children":[{"level":3,"title":"1. 三级缓存机制","slug":"_1-三级缓存机制","link":"#_1-三级缓存机制","children":[]},{"level":3,"title":"2. 避免构造函数注入","slug":"_2-避免构造函数注入","link":"#_2-避免构造函数注入","children":[]},{"level":3,"title":"3. 设计改进","slug":"_3-设计改进","link":"#_3-设计改进","children":[]}]},{"level":2,"title":"依赖注入方式","slug":"依赖注入方式","link":"#依赖注入方式","children":[]},{"level":2,"title":"为什么不推荐使用字段注入？","slug":"为什么不推荐使用字段注入","link":"#为什么不推荐使用字段注入","children":[{"level":3,"title":"1. Bean 定义解析","slug":"_1-bean-定义解析","link":"#_1-bean-定义解析","children":[]},{"level":3,"title":"2. BeanPostProcessor","slug":"_2-beanpostprocessor","link":"#_2-beanpostprocessor","children":[]},{"level":3,"title":"3. 处理注入","slug":"_3-处理注入","link":"#_3-处理注入","children":[]},{"level":3,"title":"4. 解决歧义","slug":"_4-解决歧义","link":"#_4-解决歧义","children":[]},{"level":3,"title":"5. 非必需的依赖","slug":"_5-非必需的依赖","link":"#_5-非必需的依赖","children":[]},{"level":3,"title":"6. 内部工作","slug":"_6-内部工作","link":"#_6-内部工作","children":[]}]}],"git":{"createdTime":1694615691000,"updatedTime":1694615691000,"contributors":[{"name":"machaojin","email":"1917939763@qq.com","commits":1}]},"readingTime":{"minutes":22.61,"words":6783},"filePathRelative":"blog/Spring/Spring基础.md","localizedDate":"2023年9月13日","autoDesc":true}');export{e as data};
