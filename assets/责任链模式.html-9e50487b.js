const t=JSON.parse('{"key":"v-615c54c0","path":"/blog/%E9%A1%B9%E7%9B%AE/12306/%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F.html","title":"责任链模式","lang":"zh-CN","frontmatter":{"title":"责任链模式","order":2,"description":"什么是责任链模式 责任链模式（Chain of Responsibility Pattern）是一种行为设计模式，它为请求创建了一个接收者对象的链。这个模式给予请求的类型，将请求的发送者和接收者解耦。这允许多个对象处理请求，或者将请求传递给链中的下一个对象。责任链模式通常在有多个处理级别或者处理步骤时使用。 责任链模式的主要组成部分是： 1. 处理者（...","head":[["meta",{"property":"og:url","content":"https://machaojin.cn/blog/%E9%A1%B9%E7%9B%AE/12306/%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"JavaBlog"}],["meta",{"property":"og:title","content":"责任链模式"}],["meta",{"property":"og:description","content":"什么是责任链模式 责任链模式（Chain of Responsibility Pattern）是一种行为设计模式，它为请求创建了一个接收者对象的链。这个模式给予请求的类型，将请求的发送者和接收者解耦。这允许多个对象处理请求，或者将请求传递给链中的下一个对象。责任链模式通常在有多个处理级别或者处理步骤时使用。 责任链模式的主要组成部分是： 1. 处理者（..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-01T09:34:44.000Z"}],["meta",{"property":"article:author","content":"Mr.Chaojin"}],["meta",{"property":"article:modified_time","content":"2023-09-01T09:34:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"责任链模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-01T09:34:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Chaojin\\",\\"url\\":\\"https://machaojin.cn\\",\\"email\\":\\"ma@machaojin.cn\\"}]}"]]},"headers":[{"level":2,"title":"什么是责任链模式","slug":"什么是责任链模式","link":"#什么是责任链模式","children":[]},{"level":2,"title":"项目中ticket模块责任链模式","slug":"项目中ticket模块责任链模式","link":"#项目中ticket模块责任链模式","children":[]}],"git":{"createdTime":1693560884000,"updatedTime":1693560884000,"contributors":[{"name":"machaojin","email":"1917939763@qq.com","commits":1}]},"readingTime":{"minutes":5.2,"words":1560},"filePathRelative":"blog/项目/12306/责任链模式.md","localizedDate":"2023年9月1日","autoDesc":true}');export{t as data};
