const l=JSON.parse('{"key":"v-07ea0530","path":"/blog/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL%E7%B4%A2%E5%BC%95.html","title":"MYSQL索引","lang":"zh-CN","frontmatter":{"title":"MYSQL索引","order":2,"category":["MYSQL"],"tag":["MYSQL"],"description":"MySQL 索引底层结构（B/B+ 树原理与区别） MySQL 索引底层结构是一个非常有趣的话题，它涉及到数据库的性能和优化。MySQL 支持多种索引类型，其中最常用的是 B-树索引和 B+树索引。这两种索引都是基于平衡多叉树的数据结构，但是有一些区别和特点。我将尝试用简单的语言来解释它们的原理和区别。 B-树索引是一种平衡的多叉树，它的每个节点可以存...","head":[["meta",{"property":"og:url","content":"https://machaojin.cn/machaojin1917939763.github.io/blog/MYSQL%E6%95%B0%E6%8D%AE%E5%BA%93/MYSQL%E7%B4%A2%E5%BC%95.html"}],["meta",{"property":"og:site_name","content":"JavaBlog"}],["meta",{"property":"og:title","content":"MYSQL索引"}],["meta",{"property":"og:description","content":"MySQL 索引底层结构（B/B+ 树原理与区别） MySQL 索引底层结构是一个非常有趣的话题，它涉及到数据库的性能和优化。MySQL 支持多种索引类型，其中最常用的是 B-树索引和 B+树索引。这两种索引都是基于平衡多叉树的数据结构，但是有一些区别和特点。我将尝试用简单的语言来解释它们的原理和区别。 B-树索引是一种平衡的多叉树，它的每个节点可以存..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-16T15:22:31.000Z"}],["meta",{"property":"article:author","content":"Mr.Chaojin"}],["meta",{"property":"article:tag","content":"MYSQL"}],["meta",{"property":"article:modified_time","content":"2023-08-16T15:22:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MYSQL索引\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-16T15:22:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Chaojin\\",\\"url\\":\\"https://machaojin.cn\\",\\"email\\":\\"ma@machaojin.cn\\"}]}"]]},"headers":[{"level":2,"title":"MySQL 索引底层结构（B/B+ 树原理与区别）","slug":"mysql-索引底层结构-b-b-树原理与区别","link":"#mysql-索引底层结构-b-b-树原理与区别","children":[]},{"level":2,"title":"B树和b+树 的区别？B为什么比B+树高？","slug":"b树和b-树-的区别-b为什么比b-树高","link":"#b树和b-树-的区别-b为什么比b-树高","children":[]},{"level":2,"title":"你了解的数据库（除了 MySQL）还有哪些结构的索引","slug":"你了解的数据库-除了-mysql-还有哪些结构的索引","link":"#你了解的数据库-除了-mysql-还有哪些结构的索引","children":[]},{"level":2,"title":"MySQL 索引为什么要用 B+ 树？为什么不用红黑树？为什么不用跳表？","slug":"mysql-索引为什么要用-b-树-为什么不用红黑树-为什么不用跳表","link":"#mysql-索引为什么要用-b-树-为什么不用红黑树-为什么不用跳表","children":[]},{"level":2,"title":"B+ 树一般有多少层","slug":"b-树一般有多少层","link":"#b-树一般有多少层","children":[]},{"level":2,"title":"索引的优点和缺点（为什么要用索引）","slug":"索引的优点和缺点-为什么要用索引","link":"#索引的优点和缺点-为什么要用索引","children":[]},{"level":2,"title":"建索引的时候有什么需要遵循什么原则？（哪些字段适合建立索引）","slug":"建索引的时候有什么需要遵循什么原则-哪些字段适合建立索引","link":"#建索引的时候有什么需要遵循什么原则-哪些字段适合建立索引","children":[]},{"level":2,"title":"一张表最多可以创建多少个索引？","slug":"一张表最多可以创建多少个索引","link":"#一张表最多可以创建多少个索引","children":[]},{"level":2,"title":"MySQL 都有哪些类型的索引","slug":"mysql-都有哪些类型的索引","link":"#mysql-都有哪些类型的索引","children":[]},{"level":2,"title":"唯一索引和普通索引有什么区别，该如何选择？","slug":"唯一索引和普通索引有什么区别-该如何选择","link":"#唯一索引和普通索引有什么区别-该如何选择","children":[]},{"level":2,"title":"MySQL 聚集索引 (主键索引) 和非聚集索引 (辅助索引/普通索引) 的区别","slug":"mysql-聚集索引-主键索引-和非聚集索引-辅助索引-普通索引-的区别","link":"#mysql-聚集索引-主键索引-和非聚集索引-辅助索引-普通索引-的区别","children":[]},{"level":2,"title":"InnoDB 存储引擎的数据组织形式","slug":"innodb-存储引擎的数据组织形式","link":"#innodb-存储引擎的数据组织形式","children":[]},{"level":2,"title":"MySQL 是怎么存储 NULL 的？","slug":"mysql-是怎么存储-null-的","link":"#mysql-是怎么存储-null-的","children":[]},{"level":2,"title":"可以说一下你所谓的位图吗？","slug":"可以说一下你所谓的位图吗","link":"#可以说一下你所谓的位图吗","children":[]},{"level":2,"title":"MySQL 建表需要注意什么","slug":"mysql-建表需要注意什么","link":"#mysql-建表需要注意什么","children":[]},{"level":2,"title":"唯一索引和普通索引有什么区别，该如何选择？","slug":"唯一索引和普通索引有什么区别-该如何选择-1","link":"#唯一索引和普通索引有什么区别-该如何选择-1","children":[]},{"level":2,"title":"联合索引的最左匹配原则：为什么得最左匹配，不按照这个来为什么失效？","slug":"联合索引的最左匹配原则-为什么得最左匹配-不按照这个来为什么失效","link":"#联合索引的最左匹配原则-为什么得最左匹配-不按照这个来为什么失效","children":[]},{"level":2,"title":"说一下联合索引的数据结构，并且尝试从数据结构来解释","slug":"说一下联合索引的数据结构-并且尝试从数据结构来解释","link":"#说一下联合索引的数据结构-并且尝试从数据结构来解释","children":[{"level":3,"title":"B+树数据结构：","slug":"b-树数据结构","link":"#b-树数据结构","children":[]},{"level":3,"title":"联合索引与B+树：","slug":"联合索引与b-树","link":"#联合索引与b-树","children":[]},{"level":3,"title":"为什么最左匹配原则很重要？","slug":"为什么最左匹配原则很重要","link":"#为什么最左匹配原则很重要","children":[]},{"level":3,"title":"结论：","slug":"结论","link":"#结论","children":[]}]},{"level":2,"title":"假如有(a,b,c) 联合索引，select * from table where c = x and b = x and a = x 这条语句能用到（a,b,c）联合索引吗，sql 执行之前是否会将 c b a 的查询顺序改为 a b c 吗？","slug":"假如有-a-b-c-联合索引-select-from-table-where-c-x-and-b-x-and-a-x-这条语句能用到-a-b-c-联合索引吗-sql-执行之前是否会将-c-b-a-的查询顺序改为-a-b-c-吗","link":"#假如有-a-b-c-联合索引-select-from-table-where-c-x-and-b-x-and-a-x-这条语句能用到-a-b-c-联合索引吗-sql-执行之前是否会将-c-b-a-的查询顺序改为-a-b-c-吗","children":[]},{"level":2,"title":"如何评价下述这样的联合索引的组织方式？将联合索引（A,B）设计成先分别以 A 和 B 构建两棵 B+ 树，然后将 A 字段的 B+ 树的叶子结点指向 B 字段的 B+ 树。","slug":"如何评价下述这样的联合索引的组织方式-将联合索引-a-b-设计成先分别以-a-和-b-构建两棵-b-树-然后将-a-字段的-b-树的叶子结点指向-b-字段的-b-树。","link":"#如何评价下述这样的联合索引的组织方式-将联合索引-a-b-设计成先分别以-a-和-b-构建两棵-b-树-然后将-a-字段的-b-树的叶子结点指向-b-字段的-b-树。","children":[]},{"level":2,"title":"讲讲回表查询和覆盖索引，为什么需要覆盖索引 ，可以使用覆盖索引优化的场景","slug":"讲讲回表查询和覆盖索引-为什么需要覆盖索引-可以使用覆盖索引优化的场景","link":"#讲讲回表查询和覆盖索引-为什么需要覆盖索引-可以使用覆盖索引优化的场景","children":[{"level":3,"title":"1. 回表查询","slug":"_1-回表查询","link":"#_1-回表查询","children":[]},{"level":3,"title":"2. 覆盖索引","slug":"_2-覆盖索引","link":"#_2-覆盖索引","children":[]},{"level":3,"title":"可以使用覆盖索引优化的场景：","slug":"可以使用覆盖索引优化的场景","link":"#可以使用覆盖索引优化的场景","children":[]},{"level":3,"title":"如何使用：","slug":"如何使用","link":"#如何使用","children":[]}]},{"level":2,"title":"前缀索引了解吗，为什么要建前缀索引","slug":"前缀索引了解吗-为什么要建前缀索引","link":"#前缀索引了解吗-为什么要建前缀索引","children":[{"level":3,"title":"为什么要建前缀索引？","slug":"为什么要建前缀索引","link":"#为什么要建前缀索引","children":[]},{"level":3,"title":"注意事项：","slug":"注意事项","link":"#注意事项","children":[]}]},{"level":2,"title":"select * from A join B on A.id = B.id;执行过程性能差，原因可能是？哪里需要建立索引?","slug":"select-from-a-join-b-on-a-id-b-id-执行过程性能差-原因可能是-哪里需要建立索引","link":"#select-from-a-join-b-on-a-id-b-id-执行过程性能差-原因可能是-哪里需要建立索引","children":[]},{"level":2,"title":"什么情况下用 like 查询（模糊查询）效率会比较低？","slug":"什么情况下用-like-查询-模糊查询-效率会比较低","link":"#什么情况下用-like-查询-模糊查询-效率会比较低","children":[]},{"level":2,"title":"全文索引和倒排索引","slug":"全文索引和倒排索引","link":"#全文索引和倒排索引","children":[{"level":3,"title":"全文索引 (Full-Text Indexing):","slug":"全文索引-full-text-indexing","link":"#全文索引-full-text-indexing","children":[]},{"level":3,"title":"倒排索引 (Inverted Index):","slug":"倒排索引-inverted-index","link":"#倒排索引-inverted-index","children":[]}]},{"level":2,"title":"索引在哪些情况下会失效","slug":"索引在哪些情况下会失效","link":"#索引在哪些情况下会失效","children":[]}],"git":{"createdTime":1691726435000,"updatedTime":1692199351000,"contributors":[{"name":"machaojin","email":"1917939763@qq.com","commits":2}]},"readingTime":{"minutes":48.31,"words":14492},"filePathRelative":"blog/MYSQL数据库/MYSQL索引.md","localizedDate":"2023年8月11日","autoDesc":true}');export{l as data};
