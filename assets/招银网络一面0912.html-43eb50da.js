const l=JSON.parse('{"key":"v-5e79497c","path":"/interview/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%9D%A2/%E6%8B%9B%E9%93%B6%E7%BD%91%E7%BB%9C%E4%B8%80%E9%9D%A20912.html","title":"招银网络一面0912","lang":"zh-CN","frontmatter":{"title":"招银网络一面0912","order":2,"category":["每日一面"],"tag":["每日一面"],"description":"1.介绍concurrentHashmap底层结构、CAS是什么、如何解决ABA问题 ConcurrentHashMap 的底层结构 1. 数组 ConcurrentHashMap 的核心是一个 Node[] 的数组。当数组的某个元素为空时，可以通过 CAS 操作直接插入新节点。但当多个线程同时尝试在同一位置插入时，就可能会有冲突。 2. 链表 为了解...","head":[["meta",{"property":"og:url","content":"https://machaojin.cn/interview/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%9D%A2/%E6%8B%9B%E9%93%B6%E7%BD%91%E7%BB%9C%E4%B8%80%E9%9D%A20912.html"}],["meta",{"property":"og:site_name","content":"JavaBlog"}],["meta",{"property":"og:title","content":"招银网络一面0912"}],["meta",{"property":"og:description","content":"1.介绍concurrentHashmap底层结构、CAS是什么、如何解决ABA问题 ConcurrentHashMap 的底层结构 1. 数组 ConcurrentHashMap 的核心是一个 Node[] 的数组。当数组的某个元素为空时，可以通过 CAS 操作直接插入新节点。但当多个线程同时尝试在同一位置插入时，就可能会有冲突。 2. 链表 为了解..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-13T14:34:51.000Z"}],["meta",{"property":"article:author","content":"Mr.Chaojin"}],["meta",{"property":"article:tag","content":"每日一面"}],["meta",{"property":"article:modified_time","content":"2023-09-13T14:34:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"招银网络一面0912\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-13T14:34:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Chaojin\\",\\"url\\":\\"https://machaojin.cn\\",\\"email\\":\\"ma@machaojin.cn\\"}]}"]]},"headers":[{"level":2,"title":"1.介绍concurrentHashmap底层结构、CAS是什么、如何解决ABA问题","slug":"_1-介绍concurrenthashmap底层结构、cas是什么、如何解决aba问题","link":"#_1-介绍concurrenthashmap底层结构、cas是什么、如何解决aba问题","children":[{"level":3,"title":"ConcurrentHashMap 的底层结构","slug":"concurrenthashmap-的底层结构","link":"#concurrenthashmap-的底层结构","children":[]},{"level":3,"title":"并发控制","slug":"并发控制","link":"#并发控制","children":[]},{"level":3,"title":"其他特性","slug":"其他特性","link":"#其他特性","children":[]}]},{"level":2,"title":"2.redis持久化方式、如何与数据库保持数据一致","slug":"_2-redis持久化方式、如何与数据库保持数据一致","link":"#_2-redis持久化方式、如何与数据库保持数据一致","children":[{"level":3,"title":"1. RDB (Redis DataBase)","slug":"_1-rdb-redis-database","link":"#_1-rdb-redis-database","children":[]},{"level":3,"title":"2. AOF (Append Only File)","slug":"_2-aof-append-only-file","link":"#_2-aof-append-only-file","children":[]},{"level":3,"title":"3. 混合持久化","slug":"_3-混合持久化","link":"#_3-混合持久化","children":[]},{"level":3,"title":"如何与数据库保持数据一致？","slug":"如何与数据库保持数据一致","link":"#如何与数据库保持数据一致","children":[]}]},{"level":2,"title":"3.jvm内存区域、堆的分区、新生代老生代如何垃圾回收的","slug":"_3-jvm内存区域、堆的分区、新生代老生代如何垃圾回收的","link":"#_3-jvm内存区域、堆的分区、新生代老生代如何垃圾回收的","children":[{"level":3,"title":"JVM 内存区域","slug":"jvm-内存区域","link":"#jvm-内存区域","children":[]},{"level":3,"title":"堆的分区","slug":"堆的分区","link":"#堆的分区","children":[]},{"level":3,"title":"垃圾回收","slug":"垃圾回收","link":"#垃圾回收","children":[]},{"level":3,"title":"注意","slug":"注意","link":"#注意","children":[]},{"level":3,"title":"历代垃圾回收器","slug":"历代垃圾回收器","link":"#历代垃圾回收器","children":[]},{"level":3,"title":"1. Serial GC","slug":"_1-serial-gc","link":"#_1-serial-gc","children":[]},{"level":3,"title":"2. Parallel GC (或 Throughput Collector)","slug":"_2-parallel-gc-或-throughput-collector","link":"#_2-parallel-gc-或-throughput-collector","children":[]},{"level":3,"title":"3. CMS (Concurrent Mark-Sweep) Collector","slug":"_3-cms-concurrent-mark-sweep-collector","link":"#_3-cms-concurrent-mark-sweep-collector","children":[]},{"level":3,"title":"4. G1 (Garbage-First) Collector","slug":"_4-g1-garbage-first-collector","link":"#_4-g1-garbage-first-collector","children":[]},{"level":3,"title":"5. ZGC (Z Garbage Collector)","slug":"_5-zgc-z-garbage-collector","link":"#_5-zgc-z-garbage-collector","children":[]},{"level":3,"title":"6. Shenandoah GC","slug":"_6-shenandoah-gc","link":"#_6-shenandoah-gc","children":[]},{"level":3,"title":"7. Epsilon GC","slug":"_7-epsilon-gc","link":"#_7-epsilon-gc","children":[]},{"level":3,"title":"首次出现的JDK版本","slug":"首次出现的jdk版本","link":"#首次出现的jdk版本","children":[]}]},{"level":2,"title":"4.url显示主页的过程、tcp为什么不能只两次握手","slug":"_4-url显示主页的过程、tcp为什么不能只两次握手","link":"#_4-url显示主页的过程、tcp为什么不能只两次握手","children":[{"level":3,"title":"1. 应用层 (Application Layer)","slug":"_1-应用层-application-layer","link":"#_1-应用层-application-layer","children":[]},{"level":3,"title":"2. 表示层 (Presentation Layer)","slug":"_2-表示层-presentation-layer","link":"#_2-表示层-presentation-layer","children":[]},{"level":3,"title":"3. 会话层 (Session Layer)","slug":"_3-会话层-session-layer","link":"#_3-会话层-session-layer","children":[]},{"level":3,"title":"4. 传输层 (Transport Layer)","slug":"_4-传输层-transport-layer","link":"#_4-传输层-transport-layer","children":[]},{"level":3,"title":"5. 网络层 (Network Layer)","slug":"_5-网络层-network-layer","link":"#_5-网络层-network-layer","children":[]},{"level":3,"title":"6. 数据链路层 (Data Link Layer)","slug":"_6-数据链路层-data-link-layer","link":"#_6-数据链路层-data-link-layer","children":[]},{"level":3,"title":"7. 物理层 (Physical Layer)","slug":"_7-物理层-physical-layer","link":"#_7-物理层-physical-layer","children":[]},{"level":3,"title":"服务器处理和响应","slug":"服务器处理和响应","link":"#服务器处理和响应","children":[]},{"level":3,"title":"页面渲染","slug":"页面渲染","link":"#页面渲染","children":[]},{"level":3,"title":"TCP 为什么不能只两次握手","slug":"tcp-为什么不能只两次握手","link":"#tcp-为什么不能只两次握手","children":[]}]},{"level":2,"title":"5.内存溢出和内存泄漏的区别、有遇到内存泄漏吗怎么处理的","slug":"_5-内存溢出和内存泄漏的区别、有遇到内存泄漏吗怎么处理的","link":"#_5-内存溢出和内存泄漏的区别、有遇到内存泄漏吗怎么处理的","children":[{"level":3,"title":"内存溢出与内存泄漏的区别：","slug":"内存溢出与内存泄漏的区别","link":"#内存溢出与内存泄漏的区别","children":[]},{"level":3,"title":"遇到内存泄漏时的处理方法：","slug":"遇到内存泄漏时的处理方法","link":"#遇到内存泄漏时的处理方法","children":[]}]},{"level":2,"title":"6.场景：给一个用户信息如何存储到数据库","slug":"_6-场景-给一个用户信息如何存储到数据库","link":"#_6-场景-给一个用户信息如何存储到数据库","children":[]},{"level":2,"title":"7.String中==和equals的区别，String可变吗？可重写吗？","slug":"_7-string中-和equals的区别-string可变吗-可重写吗","link":"#_7-string中-和equals的区别-string可变吗-可重写吗","children":[]},{"level":2,"title":"8.Spring AOP、动态代理类型","slug":"_8-spring-aop、动态代理类型","link":"#_8-spring-aop、动态代理类型","children":[]},{"level":2,"title":"9.有Springboot为什么要用Springcloud？Springcloud的组件、最新版本的注册中心","slug":"_9-有springboot为什么要用springcloud-springcloud的组件、最新版本的注册中心","link":"#_9-有springboot为什么要用springcloud-springcloud的组件、最新版本的注册中心","children":[{"level":3,"title":"为什么在有 Spring Boot 的情况下还要使用 Spring Cloud？","slug":"为什么在有-spring-boot-的情况下还要使用-spring-cloud","link":"#为什么在有-spring-boot-的情况下还要使用-spring-cloud","children":[]},{"level":3,"title":"Spring Cloud 的主要组件：","slug":"spring-cloud-的主要组件","link":"#spring-cloud-的主要组件","children":[]},{"level":3,"title":"最新版本的注册中心：","slug":"最新版本的注册中心","link":"#最新版本的注册中心","children":[]}]},{"level":2,"title":"10.mysql的默认隔离级别、解决了什么问题、如何解决幻读的、mvcc是如何解决幻读的、垂直分表、水平分表","slug":"_10-mysql的默认隔离级别、解决了什么问题、如何解决幻读的、mvcc是如何解决幻读的、垂直分表、水平分表","link":"#_10-mysql的默认隔离级别、解决了什么问题、如何解决幻读的、mvcc是如何解决幻读的、垂直分表、水平分表","children":[]},{"level":2,"title":"11.linux常用命令、linux设置权限命令、777","slug":"_11-linux常用命令、linux设置权限命令、777","link":"#_11-linux常用命令、linux设置权限命令、777","children":[]},{"level":2,"title":"手撕：单例模式","slug":"手撕-单例模式","link":"#手撕-单例模式","children":[]}],"git":{"createdTime":1694615691000,"updatedTime":1694615691000,"contributors":[{"name":"machaojin","email":"1917939763@qq.com","commits":1}]},"readingTime":{"minutes":16.94,"words":5081},"filePathRelative":"interview/每日一面/招银网络一面0912.md","localizedDate":"2023年9月13日","autoDesc":true}');export{l as data};
